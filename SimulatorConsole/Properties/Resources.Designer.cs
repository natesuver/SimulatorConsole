//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimulatorConsole.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SimulatorConsole.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBCC FREEPROCCACHE;DBCC DROPCLEANBUFFERS.
        /// </summary>
        internal static string ClearCaches {
            get {
                return ResourceManager.GetString("ClearCaches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP {0} subTable.ClientId
        ///from
        ///(SELECT 
        ///row_number() OVER(PARTITION BY sch_ClientID	 ORDER BY sch_ID) AS RowNum,
        ///sch_ClientID AS ClientId,
        ///sch_ID AS ID
        ///FROM T_Schedules WITH (NOLOCK)) subTable
        ///WHERE
        ///subTable.RowNum &lt;= 5 AND subTable.RowNum &gt;= 3
        ///GROUP BY subTable.ClientId
        ///ORDER BY subTable.ClientId desc.
        /// </summary>
        internal static string ClientScheduleGroupSql {
            get {
                return ResourceManager.GetString("ClientScheduleGroupSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE master;
        ///DECLARE @kill varchar(8000); SET @kill = &apos;&apos;;  
        ///SELECT @kill = @kill + &apos;kill &apos; + CONVERT(varchar(5), spid) + &apos;;&apos;  
        ///FROM master..sysprocesses  
        ///WHERE dbid = db_id(&apos;{0}&apos;)
        ///
        ///EXEC(@kill);.
        /// </summary>
        internal static string Kill_Process_Sql {
            get {
                return ResourceManager.GetString("Kill_Process_Sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH DB_CPU AS
        ///(SELECT	DB_Name(DatabaseID) AS [DatabaseName],
        ///		CONVERT(NVARCHAR(250),t.text) AS sqltxt,
        ///		SUM(total_elapsed_time) AS total_elapsed_time ,
        ///		SUM(total_worker_time) AS total_worker_time ,
        ///		SUM(total_logical_reads) AS total_logical_reads ,
        ///		SUM(execution_count) AS execution_count
        ///FROM	sys.dm_exec_query_stats AS qs 
        ///CROSS APPLY(SELECT	CONVERT(int, value)AS [DatabaseID]  
        ///			FROM	sys.dm_exec_plan_attributes(qs.plan_handle)  
        ///			WHERE	attribute =N&apos;dbid&apos;) AS epa 
        ///CROSS APPLY(SELECT	CO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetricDetailSql {
            get {
                return ResourceManager.GetString("MetricDetailSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH DB_CPU AS
        ///(SELECT	DB_Name(DatabaseID) AS [DatabaseName], 
        ///		OBJECT_NAME(CAST([ProcID] AS INT),DatabaseID) AS ObjectName,
        ///		SUM(CONVERT(DECIMAL(18,4),total_worker_time)) AS TotalCpuTime ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_elapsed_time)) AS TotalElapsedTime ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_logical_reads)) AS TotalLogicalReads ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_physical_reads)) AS TotalPhysicalReads,
        ///		SUM(CONVERT(DECIMAL(18,4),total_elapsed_time)) AS ElapsedTime,
        ///		SUM(execution_count) AS ExecutionCo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetricSql {
            get {
                return ResourceManager.GetString("MetricSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH DB_CPU AS
        ///(SELECT	DB_Name(DatabaseID) AS [DatabaseName], 
        ///		SUM(CONVERT(DECIMAL(18,4),total_worker_time)) AS TotalCpuTime ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_elapsed_time)) AS TotalElapsedTime ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_logical_reads)) AS TotalLogicalReads ,
        ///		SUM(CONVERT(DECIMAL(18,4),total_physical_reads)) AS TotalPhysicalReads,
        ///		SUM(CONVERT(DECIMAL(18,4),total_elapsed_time)) AS ElapsedTime,
        ///		SUM(CONVERT(DECIMAL(18,4),execution_count)) AS ExecutionCount
        ///
        ///FROM	sys.dm_exec_query_stats AS qs  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetricSqlAllDatabase {
            get {
                return ResourceManager.GetString("MetricSqlAllDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[T_Payers]
        ///           ([pay_BranchID]
        ///           ,[pay_ClientID]
        ///           ,[pay_Name]
        ///           ,[pay_Address1]
        ///           ,[pay_Address2]
        ///           ,[pay_City]
        ///           ,[pay_StateOrProvince]
        ///           ,[pay_PostalCode]
        ///           ,[pay_County]
        ///           ,[pay_Country]
        ///           ,[pay_Active]
        ///           ,[pay_ContactSalut]
        ///           ,[pay_ContactTitle]
        ///           ,[pay_ContactFirstName]
        ///           ,[pay_ContactLastName]
        ///           ,[pay_Phone]
        ///           ,[pay_P [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PayerCacheInsert {
            get {
                return ResourceManager.GetString("PayerCacheInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[T_PayerServices]
        ///           ([paysvc_PayerID]
        ///           ,[paysvc_ServiceCodeID]
        ///           ,[paysvc_HCPCCode]
        ///           ,[paysvc_UseDefaultHCPC]
        ///           ,[paysvc_DefaultBillRateUnitFlag]
        ///           ,[paysvc_DefaultPayRateUnitFlag]
        ///           ,[paysvc_RevenueCode]
        ///           ,[paysvc_PayCode]
        ///           ,[paysvc_EffectiveFrom]
        ///           ,[paysvc_EffectiveTo]
        ///           ,[paysvc_TaxGroupID]
        ///           ,[paysvc_CreatedDate]
        ///           ,[paysvc_CreatedUser]
        ///           ,[pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PayerServicesCacheInsert {
            get {
                return ResourceManager.GetString("PayerServicesCacheInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (Select * from sys.databases where name = &apos;{0}&apos;) BEGIN DROP DATABASE {0} END ; 
        ///RESTORE DATABASE [{0}] FROM  DISK = N&apos;{1}\{0}.bak&apos; WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 5.
        /// </summary>
        internal static string Restore_Sql {
            get {
                return ResourceManager.GetString("Restore_Sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (Select * from sys.databases where name = &apos;{0}&apos;) BEGIN ALTER DATABASE {0} SET SINGLE_USER WITH ROLLBACK IMMEDIATE; END.
        /// </summary>
        internal static string Set_Single_User_Sql {
            get {
                return ResourceManager.GetString("Set_Single_User_Sql", resourceCulture);
            }
        }
    }
}
